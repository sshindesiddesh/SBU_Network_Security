This is "plugboard" proxy application for adding an extra layer of protection to publicly accessible network services.

Document has the application information in following order.
1. Test Environment : 
2. Software Design Flow
3. Server Cient Data Exchange and Encryption Scheme
4. Sample Run
	a. SSH connection through Plugboard Proxy
	b. Echo server client through Plugboard Proxy

1. Test Environment:
	Linux 4.10.0-38-generic #42~16.04.1-Ubuntu SMP Tue Oct 10 16:32:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

2. Software Design Flow:
	Psuedo Code:
	main:
		get and check the input arguments
		check for the -l flag
		if l flag is preset:
			Start the server and wait for a client to connect
			Accept the client connection and spawn a thread to handle the client(handle_client)
			Wait for another client connection
		else:
			start the proxy in client mode
			connect to the server
			if input data is avaiable from the console
				read, encrypt and send to the server
			if input data is avaiable from the server
				read, decrypt and send to the console
	handle_client:
		if input data available from the client
			read, decrypt and send to the server
		if input data available from the server
			read, encrypt and send to the client

Note : Reads are peformed in non-blocking mode.
		

3. Server Client Data Exchange and Encryption Scheme:
	CTR mode is used for encryption. IV is generated randomly by the client and send to the server.

	Client -> Server : Connection Initiation
	Client -> Server : Initialisation Vector (IV)
	If client has data:
		Client -> Server : (Length of the data)
		Client -> Server : (Encrypted data)
	If server has data:
		Server -> Client : (Length of the data)
		Server -> Client : (Encrypted data)

Note : Reads are peformed in non-blocking mode.

4. Sample Run-

a. Connection with the SSH server through pbproxy.

	$cd <path-to-pbproxy>
	$make

Start the pbproxy
	$./pbproxy -l 2222 -k src/key.txt localhost 22

Note : Sample Key has been kept in the src/key.txt file for testing purpose.

Connect client to the pbproxy
	$ssh -o "ProxyCommand ./pbproxy -k src/key.txt localhost 2222" localhost
Output:
	siddesh@siddesh:~/Fall2017/net_sec/ASSIGNMENT3$ ssh -o "ProxyCommand ./pbproxy -k src/key.txt localhost 2222" localhost
	Welcome to Ubuntu 16.04.3 LTS (GNU/Linux 4.10.0-38-generic x86_64)

	 * Documentation:  https://help.ubuntu.com
	 * Management:     https://landscape.canonical.com
	 * Support:        https://ubuntu.com/advantage

	92 packages can be updated.
	4 updates are security updates.

	Last login: Thu Nov  9 19:41:24 2017 from 127.0.0.1
	siddesh@siddesh:~$

To terminate the connection, 'exit'
	$exit
Output:
	siddesh@siddesh:~$ exit
	logout
	Connection to localhost closed.

Can connect multiple clients one after another with similar procedure:


b. Connection to echo server with through pbproxy

	$cd <path-to-pbproxy>
	$make

Start the echo server with nc
	$nc -l -p 2223 -c "/bin/cat"

Start pbproxy
	$./pbproxy -l 2222 -k src/key.txt localhost 2223

Connect client to the pbproxy
	$./pbproxy -k src/key.txt localhost 2222

Type anything on the client and you see the echo
Example Output:
	siddesh@siddesh:~/Fall2017/net_sec/ASSIGNMENT3$ ./pbproxy -k src/key.txt localhost 2222
	Hi, how are you
	Hi, how are you
	I am fine
	I am fine

c. Also tested negative case of connection denial for SSH when there is a key mismatch between server and client.
